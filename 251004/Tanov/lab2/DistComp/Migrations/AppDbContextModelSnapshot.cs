// <auto-generated />
using System;
using DistComp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DistComp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DistComp.Models.Creator", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint")
                    .HasColumnName("id");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<string>("Firstname")
                    .IsRequired()
                    .HasMaxLength(64)
                    .HasColumnType("text");

                b.Property<string>("Lastname")
                    .IsRequired()
                    .HasMaxLength(64)
                    .HasColumnType("text");

                b.Property<string>("Login")
                    .IsRequired()
                    .HasMaxLength(64)
                    .HasColumnType("text");

                b.Property<string>("Password")
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasColumnType("text");

                b.HasKey("Id");

                b.HasIndex("Login")
                    .IsUnique();

                b.ToTable("tbl_creator", (string)null);
            });

            modelBuilder.Entity("DistComp.Models.Issue", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint")
                    .HasColumnName("id");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<string>("Content")
                    .IsRequired()
                    .HasMaxLength(2048)
                    .HasColumnType("text");

                b.Property<DateTime>("Created")
                    .HasColumnType("timestamp with time zone");

                b.Property<long>("CreatorId")
                    .HasColumnType("bigint")
                    .HasColumnName("creator_id");

                b.Property<DateTime>("Modified")
                    .HasColumnType("timestamp with time zone");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasMaxLength(64)
                    .HasColumnType("text");

                b.HasKey("Id");

                b.HasIndex("CreatorId");

                b.HasIndex("Title")
                    .IsUnique();

                b.ToTable("tbl_issue", (string)null);
            });

            modelBuilder.Entity("DistComp.Models.Label", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint")
                    .HasColumnName("id");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(32)
                    .HasColumnType("text")
                    .HasColumnName("name");

                b.HasKey("Id");

                b.HasIndex("Name")
                    .IsUnique();

                b.ToTable("tbl_label", (string)null);
            });

            modelBuilder.Entity("DistComp.Models.Note", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint")
                    .HasColumnName("id");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                b.Property<string>("Content")
                    .IsRequired()
                    .HasMaxLength(2048)
                    .HasColumnType("text");

                b.Property<long>("IssueId")
                    .HasColumnType("bigint");

                b.HasKey("Id");

                b.HasIndex("IssueId");

                b.ToTable("tbl_note", (string)null);
            });

            modelBuilder.Entity("IssueLabel", b =>
            {
                b.Property<long>("IssuesId")
                    .HasColumnType("bigint");

                b.Property<long>("LabelsId")
                    .HasColumnType("bigint");

                b.HasKey("IssuesId", "LabelsId");

                b.HasIndex("LabelsId");

                b.ToTable("IssueLabel");
            });

            modelBuilder.Entity("DistComp.Models.Issue", b =>
            {
                b.HasOne("DistComp.Models.Creator", "Creator")
                    .WithMany("Issues")
                    .HasForeignKey("CreatorId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Creator");
            });

            modelBuilder.Entity("DistComp.Models.Note", b =>
            {
                b.HasOne("DistComp.Models.Issue", "Issue")
                    .WithMany("Notes")
                    .HasForeignKey("IssueId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Issue");
            });

            modelBuilder.Entity("IssueLabel", b =>
            {
                b.HasOne("DistComp.Models.Issue", null)
                    .WithMany()
                    .HasForeignKey("IssuesId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("DistComp.Models.Label", null)
                    .WithMany()
                    .HasForeignKey("LabelsId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("DistComp.Models.Creator", b =>
            {
                b.Navigation("Issues");
            });

            modelBuilder.Entity("DistComp.Models.Issue", b =>
            {
                b.Navigation("Notes");
            });
#pragma warning restore 612, 618
        }
    }
}
